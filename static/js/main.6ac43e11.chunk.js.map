{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGIN_ID","appId","firebase","initializeApp","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","s","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","deleteDoc","doc","id","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","query","orderBy","snapshot","nweetArray","docs","map","data","marginTop","refreshUser","hisory","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ac43e11.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport {getAuth} from \"firebase/auth\";\nimport \"firebase/database\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID\n  };\n\n  \nexport default firebase.initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: { name, value }} = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            if (newAccount) {\r\n                await createUserWithEmailAndPassword(authService,email,password);\r\n            } else {\r\n                await signInWithEmailAndPassword(authService,email,password);\r\n            }\r\n        }   catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount(prev => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"s\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n                    className=\"authInput authSubmit\"\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    )\r\n};\r\nexport default AuthForm;","import React from \"react\";\nimport {authService } from \"fbase\";\nimport { signInWithPopup, GithubAuthProvider, GoogleAuthProvider } from \"firebase/auth\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n   \n    const onSocialClick = async (event) => {\n        const {target: {name}} = event;\n        let provider;\n        if(name === \"google\") {\n            provider = new GoogleAuthProvider();\n        } else if(name === \"github\") {\n            provider = new GithubAuthProvider();\n        }\n        const data = await signInWithPopup(authService,provider);\n        \n    };\n    return(\n        <div>\n            <div className=\"authContainer\">\n                <FontAwesomeIcon\n                    icon={faTwitter}\n                    color={\"#04AAFF\"}\n                    size=\"3x\"\n                    style={{ marginBottom: 30 }}\n                />\n                <AuthForm />\n                <div className=\"authBtns\">\n                    <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                        Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                    </button>\n                    <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                        Continue with GitHub <FontAwesomeIcon icon={faGithub} />\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};   \nexport default Auth;\n","\r\nimport React, { useState }from \"react\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { ref, deleteObject } from \"firebase/storage\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\r\n        if (ok) {\r\n            \r\n            await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await updateDoc(doc(dbService,`nweets/${nweetObj.id}`), {\r\n            text:newNweet,\r\n        })\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Edit your nweet\" \r\n                            value={newNweet} \r\n                            required\r\n                            autoFocus\r\n                            onChange={onChange}\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                    {isOwner && (\r\n                       <div className=\"nweet__actions\">\r\n                       <span onClick={onDeleteClick}>\r\n                           <FontAwesomeIcon icon={faTrash} />\r\n                       </span>\r\n                       <span onClick={toggleEditing}>\r\n                           <FontAwesomeIcon icon={faPencilAlt} />\r\n                       </span>\r\n                   </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Nweet; ","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit =  async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl =\"\";\r\n        if(attachment !== \"\") {\r\n            const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n            await uploadString(attachmentRef, attachment, \"data_url\");\r\n            attachmentUrl = await getDownloadURL(attachmentRef);\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await addDoc(collection(dbService, \"nweets\"), nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{ value },\r\n        } = event;\r\n        setNweet(value)\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target:{ files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if(theFile) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input \r\n                 id=\"attach-file\"\r\n                 type=\"file\"\r\n                 accept=\"image/*\"\r\n                 onChange={onFileChange}\r\n                 style={{\r\n                   opacity: 0,\r\n                 }}\r\n            />\r\n        \r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                <img\r\n                    src={attachment}\r\n                    style={{\r\n                        backgroundImage: attachment,\r\n                    }}\r\n                />\r\n                <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\nexport default NweetFactory;","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\n\nconst Home = ({ userObj }) => {\n    \n    const [nweets, setNweets] = useState([]);\n\n    useEffect( () => {\n        onSnapshot (\n        query(collection(dbService, \"nweets\"), orderBy(\"createdAt\", \"desc\")),\n        (snapshot => {\n            const nweetArray = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n        setNweets(nweetArray);\n        }));\n    }, []);\n   \n    return (\n        <div className=\"container\">\n                 <NweetFactory userObj={userObj} />\n                 <div style={{ marginTop: 30 }}>\n                {nweets.map((nweet) => (\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\n                ))}\n            </div>\n        </div>\n    );\n};\nexport default Home;","import React, { useState  } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router\";\n\n\nexport default ({ refreshUser, userObj }) => {\n    const hisory = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        hisory.push(\"/\");\n    };\n    const onChange = (event) => {\n        const {\n            target:{ value },\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName:newDisplayName,\n            });\n        }\n        refreshUser();\n    };\n          \n    \n    return (\n        <div className=\"container\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n            <input \n                onChange={onChange} \n                type=\"text\" \n                autoFocus\n                placeholder=\"Display name\" \n                value={newDisplayName} \n                className=\"formInput\"\n            />\n            <input \n                type=\"submit\" \n                value=\"Update Profile\" \n                className=\"formBtn\"\n                style={{\n                    marginTop: 10,\n                }}\n            />\n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n            Log Out\n        </span>\n    </div>\n);\n};\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n    <nav>\n        <ul style={{ display: \"flex\", \n                justifyContent: \"center\", \n                marginTop: 50 \n            }}>\n            <li>\n            <Link to=\"/\" style={{ marginRight: 10 }}>\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n                </Link>\n            </li>\n            <li>\n            <Link \n                    to=\"/profile\"\n                    style={{\n                        marginLeft: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    }}\n                >\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                    <span style={{ marginTop: 10}}>\n                        {userObj.displayName\n                            ? `${userObj.displayName}�� Profile` \n                            : \"Profile\"}\n                    </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n);\nexport default Navigation;\n","import React, {useState} from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                    style={{\n                    maxWidth: 890,\n                    width: \"100%\",\n                    margin: \"0 auto\",\n                    marginTop: 80,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    }}\n                >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                        <Profile userObj={userObj} refreshUser={refreshUser} />\n                        </Route>\n                        </div>\n                ) : (\n                    <>\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                    </>\n                )}\n            </Switch>\n        </Router>\n    )\n}\nexport default AppRouter;\n","import React, {useState, useEffect} from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\nimport { updateProfile } from \"firebase/auth\"\n\nfunction App() {\n  \n  const [init, setInit] = useState(false);\n  \n  const [userObj, setUserObj] = useState(null);\n  useEffect (() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        \n        setUserObj(user);\n      } \n      if (user) {\n        setUserObj({\n          displayName:user.displayName,\n          uid:user.uid,\n          updateProfile: (args) => updateProfile(user, args),\n      });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => updateProfile(user, args),\n    });\n  }\n  return (\n    <>\n           {init ? (\n        <AppRouter \n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)} \n          userObj={userObj}\n        />\n      ) : \"Initializing...\"}\n    </>\n  ) \n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from 'components/App';\nimport firebase from \"fbase\";\nimport \"./styles.css\";\nconsole.log(firebase);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}